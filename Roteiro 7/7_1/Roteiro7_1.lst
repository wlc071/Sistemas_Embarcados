;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02/12/2022 20:01:51
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2967      	GOTO       359
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AB      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AA      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;Roteiro7_1.c,8 :: 		void interrupt() //Interrupção chamada a cada 25us
;Roteiro7_1.c,10 :: 		if (INTCON.TMR0IF == 1)  //Verifica se foi inter. por TMR0
0x000D	0x1D0B      	BTFSS      INTCON, 2
0x000E	0x2823      	GOTO       L_interrupt0
;Roteiro7_1.c,12 :: 		aux_timer0++;     //Incrementa 1 unidade a cada 10ms
0x000F	0x0AA5      	INCF       _aux_timer0, 1
0x0010	0x1903      	BTFSC      STATUS, 2
0x0011	0x0AA6      	INCF       _aux_timer0+1, 1
;Roteiro7_1.c,13 :: 		if(aux_timer0 == 500) //Passou 500ms?
0x0012	0x0826      	MOVF       _aux_timer0+1, 0
0x0013	0x3A01      	XORLW      1
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2818      	GOTO       L__interrupt16
0x0016	0x30F4      	MOVLW      244
0x0017	0x0625      	XORWF      _aux_timer0, 0
L__interrupt16:
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x281F      	GOTO       L_interrupt1
;Roteiro7_1.c,15 :: 		flagSerial = 1;
0x001A	0x14A9      	BSF        _flagSerial, BitPos(_flagSerial+0)
;Roteiro7_1.c,16 :: 		aux_timer0 = 0;
0x001B	0x01A5      	CLRF       _aux_timer0
0x001C	0x01A6      	CLRF       _aux_timer0+1
;Roteiro7_1.c,17 :: 		RC2_bit = ~ RC2_bit;
0x001D	0x3004      	MOVLW      4
0x001E	0x0687      	XORWF      RC2_bit, 1
;Roteiro7_1.c,18 :: 		}
L_interrupt1:
;Roteiro7_1.c,19 :: 		INTCON.TMR0IF = 0;   // Limpa o sinalizador
0x001F	0x110B      	BCF        INTCON, 2
;Roteiro7_1.c,20 :: 		INTCON.TMR0IE = 1;  // Habilita novamente a Interrupção
0x0020	0x168B      	BSF        INTCON, 5
;Roteiro7_1.c,21 :: 		TMR0 = 6;          // Inicia o contador Timer0 no valor 6
0x0021	0x3006      	MOVLW      6
0x0022	0x0081      	MOVWF      TMR0
;Roteiro7_1.c,22 :: 		}
L_interrupt0:
;Roteiro7_1.c,23 :: 		}
L_end_interrupt:
L__interrupt15:
0x0023	0x0820      	MOVF       32, 0
0x0024	0x00F0      	MOVWF      R0
0x0025	0x082A      	MOVF       ___savePCLATH, 0
0x0026	0x008A      	MOVWF      PCLATH
0x0027	0x0E2B      	SWAPF      ___saveSTATUS, 0
0x0028	0x0083      	MOVWF      STATUS
0x0029	0x0EFF      	SWAPF      R15, 1
0x002A	0x0E7F      	SWAPF      R15, 0
0x002B	0x0009      	RETFIE
; end of _interrupt
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x002C	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x002D	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x002E	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x002F	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0030	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0031	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0032	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0033	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0034	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x0035	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0036	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x0037	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0038	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0039	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x003A	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x003B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x003C	0x2844      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x003D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x003E	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x003F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0040	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0041	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0042	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0043	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0044	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x0045	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0046	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x0047	0x2832      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0048	0x0008      	RETURN
; end of _Div_16X16_U
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x0049	0x1283      	BCF        STATUS, 5
0x004A	0x1303      	BCF        STATUS, 6
0x004B	0x01B8      	CLRF       WordToStr_len_L0
L_WordToStr11:
0x004C	0x3005      	MOVLW      5
0x004D	0x0238      	SUBWF      WordToStr_len_L0, 0
0x004E	0x1803      	BTFSC      STATUS, 0
0x004F	0x2857      	GOTO       L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0050	0x0838      	MOVF       WordToStr_len_L0, 0
0x0051	0x0737      	ADDWF      FARG_WordToStr_output, 0
0x0052	0x0084      	MOVWF      FSR
0x0053	0x3020      	MOVLW      32
0x0054	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,103 :: 		
0x0055	0x0AB8      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,104 :: 		
0x0056	0x284C      	GOTO       L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x0057	0x0838      	MOVF       WordToStr_len_L0, 0
0x0058	0x0737      	ADDWF      FARG_WordToStr_output, 0
0x0059	0x0084      	MOVWF      FSR
0x005A	0x0180      	CLRF       INDF
0x005B	0x03B8      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x005C	0x0838      	MOVF       WordToStr_len_L0, 0
0x005D	0x0737      	ADDWF      FARG_WordToStr_output, 0
0x005E	0x00B9      	MOVWF      FLOC__WordToStr
0x005F	0x300A      	MOVLW      10
0x0060	0x00F4      	MOVWF      R4
0x0061	0x01F5      	CLRF       R4+1
0x0062	0x0835      	MOVF       FARG_WordToStr_input, 0
0x0063	0x00F0      	MOVWF      R0
0x0064	0x0836      	MOVF       FARG_WordToStr_input+1, 0
0x0065	0x00F1      	MOVWF      R0+1
0x0066	0x202C      	CALL       _Div_16X16_U
0x0067	0x0878      	MOVF       R8, 0
0x0068	0x00F0      	MOVWF      R0
0x0069	0x0879      	MOVF       R8+1, 0
0x006A	0x00F1      	MOVWF      R0+1
0x006B	0x3030      	MOVLW      48
0x006C	0x07F0      	ADDWF      R0, 1
0x006D	0x0839      	MOVF       FLOC__WordToStr, 0
0x006E	0x0084      	MOVWF      FSR
0x006F	0x0870      	MOVF       R0, 0
0x0070	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,109 :: 		
0x0071	0x300A      	MOVLW      10
0x0072	0x00F4      	MOVWF      R4
0x0073	0x01F5      	CLRF       R4+1
0x0074	0x0835      	MOVF       FARG_WordToStr_input, 0
0x0075	0x00F0      	MOVWF      R0
0x0076	0x0836      	MOVF       FARG_WordToStr_input+1, 0
0x0077	0x00F1      	MOVWF      R0+1
0x0078	0x202C      	CALL       _Div_16X16_U
0x0079	0x0870      	MOVF       R0, 0
0x007A	0x00B5      	MOVWF      FARG_WordToStr_input
0x007B	0x0871      	MOVF       R0+1, 0
0x007C	0x00B6      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x007D	0x3000      	MOVLW      0
0x007E	0x0671      	XORWF      R0+1, 0
0x007F	0x1D03      	BTFSS      STATUS, 2
0x0080	0x2883      	GOTO       L__WordToStr379
0x0081	0x3000      	MOVLW      0
0x0082	0x0670      	XORWF      R0, 0
L__WordToStr379:
0x0083	0x1D03      	BTFSS      STATUS, 2
0x0084	0x2886      	GOTO       L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0085	0x2888      	GOTO       L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x0086	0x03B8      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,113 :: 		
0x0087	0x285C      	GOTO       L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x0088	0x0008      	RETURN
; end of _WordToStr
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0089	0x1683      	BSF        STATUS, 5
0x008A	0x1303      	BCF        STATUS, 6
0x008B	0x1898      	BTFSC      TXSTA, 1
0x008C	0x288F      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x008D	0x0000      	NOP
0x008E	0x2889      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x008F	0x1283      	BCF        STATUS, 5
0x0090	0x0835      	MOVF       FARG_UART1_Write_data_, 0
0x0091	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x0092	0x0008      	RETURN
; end of _UART1_Write
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0093	0x3024      	MOVLW      36
0x0094	0x1283      	BCF        STATUS, 5
0x0095	0x1303      	BCF        STATUS, 6
0x0096	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x0097	0x0BFD      	DECFSZ     R13, 1
0x0098	0x2897      	GOTO       L_Delay_22us1
0x0099	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x009A	0x0008      	RETURN
; end of _Delay_22us
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x009B	0x1283      	BCF        STATUS, 5
0x009C	0x1303      	BCF        STATUS, 6
0x009D	0x0824      	MOVF       ___DoICPAddr+1, 0
0x009E	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x009F	0x0823      	MOVF       ___DoICPAddr, 0
0x00A0	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00A1	0x0008      	RETURN
; end of _____DoICP
_ADC_Read:
;__Lib_ADC_A_C.c,68 :: 		
;__Lib_ADC_A_C.c,70 :: 		
0x00A2	0x1283      	BCF        STATUS, 5
0x00A3	0x1303      	BCF        STATUS, 6
0x00A4	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,71 :: 		
0x00A5	0x30C0      	MOVLW      192
0x00A6	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,72 :: 		
0x00A7	0x0922      	COMF       _vref_mask, 0
0x00A8	0x00F0      	MOVWF      R0
0x00A9	0x0870      	MOVF       R0, 0
0x00AA	0x1683      	BSF        STATUS, 5
0x00AB	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,73 :: 		
0x00AC	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,74 :: 		
0x00AD	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,75 :: 		
0x00AE	0x1283      	BCF        STATUS, 5
0x00AF	0x082C      	MOVF       FARG_ADC_Read_channel, 0
0x00B0	0x00F0      	MOVWF      R0
0x00B1	0x0DF0      	RLF        R0, 1
0x00B2	0x1070      	BCF        R0, 0
0x00B3	0x0DF0      	RLF        R0, 1
0x00B4	0x1070      	BCF        R0, 0
0x00B5	0x0DF0      	RLF        R0, 1
0x00B6	0x1070      	BCF        R0, 0
0x00B7	0x0870      	MOVF       R0, 0
0x00B8	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,78 :: 		
0x00B9	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,81 :: 		
0x00BA	0x2093      	CALL       _Delay_22us
;__Lib_ADC_A_C.c,84 :: 		
0x00BB	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_C.c,87 :: 		
L_ADC_Read2:
0x00BC	0x1D1F      	BTFSS      ADCON0, 2
0x00BD	0x28C0      	GOTO       L_ADC_Read3
;__Lib_ADC_A_C.c,88 :: 		
0x00BE	0x0000      	NOP
0x00BF	0x28BC      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,91 :: 		
0x00C0	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_C.c,94 :: 		
0x00C1	0x081E      	MOVF       ADRESH, 0
0x00C2	0x00F1      	MOVWF      R0+1
0x00C3	0x01F0      	CLRF       R0
0x00C4	0x1683      	BSF        STATUS, 5
0x00C5	0x081E      	MOVF       ADRESL, 0
0x00C6	0x1283      	BCF        STATUS, 5
0x00C7	0x04F0      	IORWF      R0, 1
0x00C8	0x3000      	MOVLW      0
0x00C9	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_A_C.c,95 :: 		
L_end_ADC_Read:
0x00CA	0x0008      	RETURN
; end of _ADC_Read
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x00CB	0x1283      	BCF        STATUS, 5
0x00CC	0x1303      	BCF        STATUS, 6
0x00CD	0x01B1      	CLRF       IntToStr_negative_L0
0x00CE	0x01B2      	CLRF       IntToStr_negative_L0+1
;__Lib_Conversions.c,202 :: 		
0x00CF	0x082C      	MOVF       FARG_IntToStr_input, 0
0x00D0	0x00B3      	MOVWF      IntToStr_inword_L0
0x00D1	0x082D      	MOVF       FARG_IntToStr_input+1, 0
0x00D2	0x00B4      	MOVWF      IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x00D3	0x3080      	MOVLW      128
0x00D4	0x062D      	XORWF      FARG_IntToStr_input+1, 0
0x00D5	0x00F0      	MOVWF      R0
0x00D6	0x3080      	MOVLW      128
0x00D7	0x0270      	SUBWF      R0, 0
0x00D8	0x1D03      	BTFSS      STATUS, 2
0x00D9	0x28DC      	GOTO       L__IntToStr387
0x00DA	0x3000      	MOVLW      0
0x00DB	0x022C      	SUBWF      FARG_IntToStr_input, 0
L__IntToStr387:
0x00DC	0x1803      	BTFSC      STATUS, 0
0x00DD	0x28EA      	GOTO       L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x00DE	0x3001      	MOVLW      1
0x00DF	0x00B1      	MOVWF      IntToStr_negative_L0
0x00E0	0x3000      	MOVLW      0
0x00E1	0x00B2      	MOVWF      IntToStr_negative_L0+1
;__Lib_Conversions.c,205 :: 		
0x00E2	0x082C      	MOVF       FARG_IntToStr_input, 0
0x00E3	0x3C00      	SUBLW      0
0x00E4	0x00B3      	MOVWF      IntToStr_inword_L0
0x00E5	0x082D      	MOVF       FARG_IntToStr_input+1, 0
0x00E6	0x1C03      	BTFSS      STATUS, 0
0x00E7	0x3E01      	ADDLW      1
0x00E8	0x01B4      	CLRF       IntToStr_inword_L0+1
0x00E9	0x02B4      	SUBWF      IntToStr_inword_L0+1, 1
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x00EA	0x0833      	MOVF       IntToStr_inword_L0, 0
0x00EB	0x00B5      	MOVWF      FARG_WordToStr_input
0x00EC	0x0834      	MOVF       IntToStr_inword_L0+1, 0
0x00ED	0x00B6      	MOVWF      FARG_WordToStr_input+1
0x00EE	0x082E      	MOVF       FARG_IntToStr_output, 0
0x00EF	0x00B7      	MOVWF      FARG_WordToStr_output
0x00F0	0x2049      	CALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x00F1	0x3006      	MOVLW      6
0x00F2	0x00AF      	MOVWF      IntToStr_i_L0
0x00F3	0x3000      	MOVLW      0
0x00F4	0x00B0      	MOVWF      IntToStr_i_L0+1
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x00F5	0x0830      	MOVF       IntToStr_i_L0+1, 0
0x00F6	0x3C00      	SUBLW      0
0x00F7	0x1D03      	BTFSS      STATUS, 2
0x00F8	0x28FB      	GOTO       L__IntToStr388
0x00F9	0x082F      	MOVF       IntToStr_i_L0, 0
0x00FA	0x3C00      	SUBLW      0
L__IntToStr388:
0x00FB	0x1803      	BTFSC      STATUS, 0
0x00FC	0x2916      	GOTO       L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x00FD	0x082F      	MOVF       IntToStr_i_L0, 0
0x00FE	0x072E      	ADDWF      FARG_IntToStr_output, 0
0x00FF	0x00F2      	MOVWF      R2
0x0100	0x3001      	MOVLW      1
0x0101	0x022F      	SUBWF      IntToStr_i_L0, 0
0x0102	0x00F0      	MOVWF      R0
0x0103	0x3000      	MOVLW      0
0x0104	0x1C03      	BTFSS      STATUS, 0
0x0105	0x3E01      	ADDLW      1
0x0106	0x0230      	SUBWF      IntToStr_i_L0+1, 0
0x0107	0x00F1      	MOVWF      R0+1
0x0108	0x0870      	MOVF       R0, 0
0x0109	0x072E      	ADDWF      FARG_IntToStr_output, 0
0x010A	0x0084      	MOVWF      FSR
0x010B	0x0800      	MOVF       INDF, 0
0x010C	0x00F0      	MOVWF      R0
0x010D	0x0872      	MOVF       R2, 0
0x010E	0x0084      	MOVWF      FSR
0x010F	0x0870      	MOVF       R0, 0
0x0110	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,212 :: 		
0x0111	0x3001      	MOVLW      1
0x0112	0x02AF      	SUBWF      IntToStr_i_L0, 1
0x0113	0x1C03      	BTFSS      STATUS, 0
0x0114	0x03B0      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,213 :: 		
0x0115	0x28F5      	GOTO       L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x0116	0x082E      	MOVF       FARG_IntToStr_output, 0
0x0117	0x0084      	MOVWF      FSR
0x0118	0x3020      	MOVLW      32
0x0119	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,215 :: 		
0x011A	0x0831      	MOVF       IntToStr_negative_L0, 0
0x011B	0x0432      	IORWF      IntToStr_negative_L0+1, 0
0x011C	0x1903      	BTFSC      STATUS, 2
0x011D	0x2934      	GOTO       L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x011E	0x01AF      	CLRF       IntToStr_i_L0
0x011F	0x01B0      	CLRF       IntToStr_i_L0+1
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x0120	0x082F      	MOVF       IntToStr_i_L0, 0
0x0121	0x072E      	ADDWF      FARG_IntToStr_output, 0
0x0122	0x0084      	MOVWF      FSR
0x0123	0x0800      	MOVF       INDF, 0
0x0124	0x3A20      	XORLW      32
0x0125	0x1D03      	BTFSS      STATUS, 2
0x0126	0x292B      	GOTO       L_IntToStr42
0x0127	0x0AAF      	INCF       IntToStr_i_L0, 1
0x0128	0x1903      	BTFSC      STATUS, 2
0x0129	0x0AB0      	INCF       IntToStr_i_L0+1, 1
0x012A	0x2920      	GOTO       L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x012B	0x3001      	MOVLW      1
0x012C	0x02AF      	SUBWF      IntToStr_i_L0, 1
0x012D	0x1C03      	BTFSS      STATUS, 0
0x012E	0x03B0      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,219 :: 		
0x012F	0x082F      	MOVF       IntToStr_i_L0, 0
0x0130	0x072E      	ADDWF      FARG_IntToStr_output, 0
0x0131	0x0084      	MOVWF      FSR
0x0132	0x302D      	MOVLW      45
0x0133	0x0080      	MOVWF      INDF
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x0134	0x0008      	RETURN
; end of _IntToStr
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0135	0x209B      	CALL       _____DoICP
0x0136	0x118A      	BCF        PCLATH, 3
0x0137	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0138	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0139	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x013A	0x0AA3      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x013B	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x013C	0x0AA4      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x013D	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x013E	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x013F	0x2935      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0140	0x0008      	RETURN
; end of ___CC2DW
_UART1_Write_Text:
;__Lib_UART_c67.c,47 :: 		
;__Lib_UART_c67.c,48 :: 		
0x0141	0x1283      	BCF        STATUS, 5
0x0142	0x1303      	BCF        STATUS, 6
0x0143	0x01AE      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_c67.c,50 :: 		
0x0144	0x082C      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x0145	0x0084      	MOVWF      FSR
0x0146	0x0800      	MOVF       INDF, 0
0x0147	0x00AD      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,51 :: 		
L_UART1_Write_Text5:
0x0148	0x082D      	MOVF       UART1_Write_Text_data__L0, 0
0x0149	0x3A00      	XORLW      0
0x014A	0x1903      	BTFSC      STATUS, 2
0x014B	0x2956      	GOTO       L_UART1_Write_Text6
;__Lib_UART_c67.c,52 :: 		
0x014C	0x082D      	MOVF       UART1_Write_Text_data__L0, 0
0x014D	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x014E	0x2089      	CALL       _UART1_Write
;__Lib_UART_c67.c,53 :: 		
0x014F	0x0AAE      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,54 :: 		
0x0150	0x082E      	MOVF       UART1_Write_Text_counter_L0, 0
0x0151	0x072C      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x0152	0x0084      	MOVWF      FSR
0x0153	0x0800      	MOVF       INDF, 0
0x0154	0x00AD      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,55 :: 		
0x0155	0x2948      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,56 :: 		
L_end_UART1_Write_Text:
0x0156	0x0008      	RETURN
; end of _UART1_Write_Text
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0157	0x1683      	BSF        STATUS, 5
0x0158	0x1303      	BCF        STATUS, 6
0x0159	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x015A	0x3090      	MOVLW      144
0x015B	0x1283      	BCF        STATUS, 5
0x015C	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x015D	0x1683      	BSF        STATUS, 5
0x015E	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x015F	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0160	0x1283      	BCF        STATUS, 5
0x0161	0x1E8C      	BTFSS      PIR1, 5
0x0162	0x2966      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0163	0x081A      	MOVF       RCREG, 0
0x0164	0x00F0      	MOVWF      R0
0x0165	0x2960      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x0166	0x0008      	RETURN
; end of _UART1_Init
_main:
0x0167	0x21D2      	CALL       466
;Roteiro7_1.c,26 :: 		void main()
;Roteiro7_1.c,28 :: 		TRISA = 0xFF;    //Config.todos os pinos do PORTA c/ entrada
0x0168	0x30FF      	MOVLW      255
0x0169	0x1683      	BSF        STATUS, 5
0x016A	0x1303      	BCF        STATUS, 6
0x016B	0x0085      	MOVWF      TRISA
;Roteiro7_1.c,29 :: 		TRISC = 0X00;   //Configura todos   pinos do PORTC c/ saídas
0x016C	0x0187      	CLRF       TRISC
;Roteiro7_1.c,32 :: 		ADCON0.ADCS0 = 0;
0x016D	0x1283      	BCF        STATUS, 5
0x016E	0x131F      	BCF        ADCON0, 6
;Roteiro7_1.c,33 :: 		ADCON0.ADCS1 = 0;
0x016F	0x139F      	BCF        ADCON0, 7
;Roteiro7_1.c,34 :: 		ADCON1.ADCS2 = 0;
0x0170	0x1683      	BSF        STATUS, 5
0x0171	0x131F      	BCF        ADCON1, 6
;Roteiro7_1.c,37 :: 		ADCON0.CHS0 = 0;
0x0172	0x1283      	BCF        STATUS, 5
0x0173	0x119F      	BCF        ADCON0, 3
;Roteiro7_1.c,38 :: 		ADCON0.CHS1 = 0;
0x0174	0x121F      	BCF        ADCON0, 4
;Roteiro7_1.c,39 :: 		ADCON0.CHS2 = 0;
0x0175	0x129F      	BCF        ADCON0, 5
;Roteiro7_1.c,42 :: 		ADCON0.ADON = 1;
0x0176	0x141F      	BSF        ADCON0, 0
;Roteiro7_1.c,45 :: 		ADCON1.ADFM = 0;
0x0177	0x1683      	BSF        STATUS, 5
0x0178	0x139F      	BCF        ADCON1, 7
;Roteiro7_1.c,48 :: 		ADCON1.PCFG0 = 0;
0x0179	0x101F      	BCF        ADCON1, 0
;Roteiro7_1.c,49 :: 		ADCON1.PCFG1 = 1;
0x017A	0x149F      	BSF        ADCON1, 1
;Roteiro7_1.c,50 :: 		ADCON1.PCFG2 = 1;
0x017B	0x151F      	BSF        ADCON1, 2
;Roteiro7_1.c,51 :: 		ADCON1.PCFG3 = 1;
0x017C	0x159F      	BSF        ADCON1, 3
;Roteiro7_1.c,54 :: 		CMCON.CM0 = 1;
0x017D	0x141C      	BSF        CMCON, 0
;Roteiro7_1.c,55 :: 		CMCON.CM1 = 1;
0x017E	0x149C      	BSF        CMCON, 1
;Roteiro7_1.c,56 :: 		CMCON.CM2 = 1;
0x017F	0x151C      	BSF        CMCON, 2
;Roteiro7_1.c,59 :: 		OPTION_REG.T0CS = 0; // bit 5 Fonte de referência - Clock Interno
0x0180	0x1281      	BCF        OPTION_REG, 5
;Roteiro7_1.c,60 :: 		OPTION_REG.T0SE = 0; // bit 4 Transição do Timer0 biaxa-para-alta
0x0181	0x1201      	BCF        OPTION_REG, 4
;Roteiro7_1.c,61 :: 		OPTION_REG.PSA = 0;  // bit 3 Seleciona o Prescaler para o Timer0
0x0182	0x1181      	BCF        OPTION_REG, 3
;Roteiro7_1.c,62 :: 		OPTION_REG.PS2 = 1;  // -----------------------------------------
0x0183	0x1501      	BSF        OPTION_REG, 2
;Roteiro7_1.c,63 :: 		OPTION_REG.PS1 = 0;  // bits 2-0 PS2:PS0: TaxaPrescaler 101 (1:64)
0x0184	0x1081      	BCF        OPTION_REG, 1
;Roteiro7_1.c,64 :: 		OPTION_REG.PS0 = 1;  // -----------------------------------------
0x0185	0x1401      	BSF        OPTION_REG, 0
;Roteiro7_1.c,65 :: 		TMR0 = 6;                       // Inicia o contador Timer0 no valor 6
0x0186	0x3006      	MOVLW      6
0x0187	0x1283      	BCF        STATUS, 5
0x0188	0x0081      	MOVWF      TMR0
;Roteiro7_1.c,68 :: 		INTCON = 0;         // Limpa o registro de controle de Interrupção
0x0189	0x018B      	CLRF       INTCON
;Roteiro7_1.c,69 :: 		INTCON.TMR0IE = 1;  // bit5 Habilita Interrupção d Timer0 Overflow
0x018A	0x168B      	BSF        INTCON, 5
;Roteiro7_1.c,70 :: 		INTCON.TMR0IF = 0;  // bit2 Limpa sinalizador d Interrupção timer0
0x018B	0x110B      	BCF        INTCON, 2
;Roteiro7_1.c,71 :: 		INTCON.GIE = 1;     // bit7 Habilita Interrupção Global
0x018C	0x178B      	BSF        INTCON, 7
;Roteiro7_1.c,73 :: 		UART1_Init(9600);     // Inicializa módulo Serial UART em 9600 bps
0x018D	0x3081      	MOVLW      129
0x018E	0x1683      	BSF        STATUS, 5
0x018F	0x0099      	MOVWF      SPBRG
0x0190	0x1518      	BSF        TXSTA, 2
0x0191	0x2157      	CALL       _UART1_Init
;Roteiro7_1.c,74 :: 		Delay_ms(100);          // Aguarda a estabilização do módulo UART
0x0192	0x3003      	MOVLW      3
0x0193	0x00FB      	MOVWF      R11
0x0194	0x308A      	MOVLW      138
0x0195	0x00FC      	MOVWF      R12
0x0196	0x3055      	MOVLW      85
0x0197	0x00FD      	MOVWF      R13
L_main2:
0x0198	0x0BFD      	DECFSZ     R13, 1
0x0199	0x2998      	GOTO       L_main2
0x019A	0x0BFC      	DECFSZ     R12, 1
0x019B	0x2998      	GOTO       L_main2
0x019C	0x0BFB      	DECFSZ     R11, 1
0x019D	0x2998      	GOTO       L_main2
0x019E	0x0000      	NOP
0x019F	0x0000      	NOP
;Roteiro7_1.c,76 :: 		TRISB= 0b1111111;  //Configura todo o PORTB como saída
0x01A0	0x307F      	MOVLW      127
0x01A1	0x1683      	BSF        STATUS, 5
0x01A2	0x0086      	MOVWF      TRISB
;Roteiro7_1.c,77 :: 		RB0_bit = 0;
0x01A3	0x1283      	BCF        STATUS, 5
0x01A4	0x1006      	BCF        RB0_bit, BitPos(RB0_bit+0)
;Roteiro7_1.c,80 :: 		while(1)
L_main3:
;Roteiro7_1.c,82 :: 		if(flagSerial == 1)
0x01A5	0x1CA9      	BTFSS      _flagSerial, BitPos(_flagSerial+0)
0x01A6	0x29C9      	GOTO       L_main5
;Roteiro7_1.c,84 :: 		flagSerial = 0;
0x01A7	0x10A9      	BCF        _flagSerial, BitPos(_flagSerial+0)
;Roteiro7_1.c,86 :: 		if((RB0_bit == 0) && (fg_bt == 0)){
0x01A8	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x01A9	0x29AE      	GOTO       L_main8
0x01AA	0x1829      	BTFSC      _fg_bt, BitPos(_fg_bt+0)
0x01AB	0x29AE      	GOTO       L_main8
L__main13:
;Roteiro7_1.c,87 :: 		cont = cont + 1;
0x01AC	0x0AA1      	INCF       _cont, 1
;Roteiro7_1.c,88 :: 		fg_bt=1;
0x01AD	0x1429      	BSF        _fg_bt, BitPos(_fg_bt+0)
;Roteiro7_1.c,89 :: 		}
L_main8:
;Roteiro7_1.c,90 :: 		if((RB0_bit == 1) && (fg_bt == 1)){
0x01AE	0x1C06      	BTFSS      RB0_bit, BitPos(RB0_bit+0)
0x01AF	0x29B3      	GOTO       L_main11
0x01B0	0x1C29      	BTFSS      _fg_bt, BitPos(_fg_bt+0)
0x01B1	0x29B3      	GOTO       L_main11
L__main12:
;Roteiro7_1.c,91 :: 		fg_bt=0;
0x01B2	0x1029      	BCF        _fg_bt, BitPos(_fg_bt+0)
;Roteiro7_1.c,92 :: 		}
L_main11:
;Roteiro7_1.c,93 :: 		adc_AN0 = ADC_Read(0); //Lê o valor da porta AN0
0x01B3	0x01AC      	CLRF       FARG_ADC_Read_channel
0x01B4	0x20A2      	CALL       _ADC_Read
0x01B5	0x0870      	MOVF       R0, 0
0x01B6	0x00A7      	MOVWF      _adc_AN0
0x01B7	0x0871      	MOVF       R0+1, 0
0x01B8	0x00A8      	MOVWF      _adc_AN0+1
;Roteiro7_1.c,95 :: 		IntToStr(adc_AN0, cont);
0x01B9	0x0870      	MOVF       R0, 0
0x01BA	0x00AC      	MOVWF      FARG_IntToStr_input
0x01BB	0x0871      	MOVF       R0+1, 0
0x01BC	0x00AD      	MOVWF      FARG_IntToStr_input+1
0x01BD	0x0821      	MOVF       _cont, 0
0x01BE	0x00AE      	MOVWF      FARG_IntToStr_output
0x01BF	0x20CB      	CALL       _IntToStr
;Roteiro7_1.c,98 :: 		UART1_Write_Text(cont);  // Envia os dados via UART
0x01C0	0x0821      	MOVF       _cont, 0
0x01C1	0x00AC      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01C2	0x2141      	CALL       _UART1_Write_Text
;Roteiro7_1.c,101 :: 		UART1_Write(13);  UART1_Write(13);
0x01C3	0x300D      	MOVLW      13
0x01C4	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x01C5	0x2089      	CALL       _UART1_Write
0x01C6	0x300D      	MOVLW      13
0x01C7	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x01C8	0x2089      	CALL       _UART1_Write
;Roteiro7_1.c,102 :: 		}
L_main5:
;Roteiro7_1.c,103 :: 		}
0x01C9	0x29A5      	GOTO       L_main3
;Roteiro7_1.c,104 :: 		}
L_end_main:
0x01CA	0x29CA      	GOTO       $+0
; end of _main
0x01D2	0x3021      	MOVLW      33
0x01D3	0x0084      	MOVWF      FSR
0x01D4	0x3002      	MOVLW      2
0x01D5	0x1283      	BCF        STATUS, 5
0x01D6	0x1303      	BCF        STATUS, 6
0x01D7	0x00F0      	MOVWF      R0
0x01D8	0x30D0      	MOVLW      208
0x01D9	0x00A3      	MOVWF      ___DoICPAddr
0x01DA	0x3001      	MOVLW      1
0x01DB	0x00A4      	MOVWF      36
0x01DC	0x2135      	CALL       309
0x01DD	0x0008      	RETURN
;Roteiro7_1.c,0 :: ?ICS_cont
0x01D0	0x3400 ;?ICS_cont+0
; end of ?ICS_cont
;__Lib_ADC_A_C.c,0 :: ?ICS_vref_mask
0x01D1	0x340F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [40]    _interrupt
0x002C      [29]    _Div_16X16_U
0x0049      [64]    _WordToStr
0x0089      [10]    _UART1_Write
0x0093       [8]    _Delay_22us
0x009B       [7]    _____DoICP
0x00A2      [41]    _ADC_Read
0x00CB     [106]    _IntToStr
0x0135      [12]    ___CC2DW
0x0141      [22]    _UART1_Write_Text
0x0157      [16]    _UART1_Init
0x0167      [99]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    RB0_bit
0x0007       [0]    RC2_bit
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0021       [1]    _cont
0x0022       [1]    _vref_mask
0x0023       [2]    ___DoICPAddr
0x0025       [2]    _aux_timer0
0x0027       [2]    _adc_AN0
0x0029       [0]    _fg_bt
0x0029       [0]    _flagSerial
0x002A       [1]    ___savePCLATH
0x002B       [1]    ___saveSTATUS
0x002C       [1]    FARG_ADC_Read_channel
0x002C       [2]    FARG_IntToStr_input
0x002C       [1]    FARG_UART1_Write_Text_uart_text
0x002D       [1]    UART1_Write_Text_data__L0
0x002E       [1]    UART1_Write_Text_counter_L0
0x002E       [1]    FARG_IntToStr_output
0x002F       [2]    IntToStr_i_L0
0x0031       [2]    IntToStr_negative_L0
0x0033       [2]    IntToStr_inword_L0
0x0035       [2]    FARG_WordToStr_input
0x0035       [1]    FARG_UART1_Write_data_
0x0037       [1]    FARG_WordToStr_output
0x0038       [1]    WordToStr_len_L0
0x0039       [1]    FLOC__WordToStr
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009C       [1]    CMCON
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01D0       [1]    ?ICS_cont
0x01D1       [1]    ?ICS_vref_mask
