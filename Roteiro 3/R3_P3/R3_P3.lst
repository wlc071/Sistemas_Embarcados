;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09/11/2022 23:45:20
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2882      	GOTO       130
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B8      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
0x000D	0x0804      	MOVF       FSR, 0
0x000E	0x00A1      	MOVWF      33
;R3_P3.c,13 :: 		void interrupt()
;R3_P3.c,15 :: 		if (INTCON.TMR0IF == 1) //Interrupção gerada a cada 1 ms
0x000F	0x1D0B      	BTFSS      INTCON, 2
0x0010	0x2864      	GOTO       L_interrupt0
;R3_P3.c,17 :: 		if (sel_display == 4)
0x0011	0x082C      	MOVF       _sel_display, 0
0x0012	0x3A04      	XORLW      4
0x0013	0x1D03      	BTFSS      STATUS, 2
0x0014	0x281F      	GOTO       L_interrupt1
;R3_P3.c,19 :: 		PORTC = 0B11110111; // Seleciona display 1 (unidade)
0x0015	0x30F7      	MOVLW      247
0x0016	0x0087      	MOVWF      PORTC
;R3_P3.c,20 :: 		PORTB = const_7seg[cont_un];
0x0017	0x0832      	MOVF       _cont_un, 0
0x0018	0x3E22      	ADDLW      _const_7seg
0x0019	0x0084      	MOVWF      FSR
0x001A	0x0800      	MOVF       INDF, 0
0x001B	0x0086      	MOVWF      PORTB
;R3_P3.c,21 :: 		sel_display = 3;
0x001C	0x3003      	MOVLW      3
0x001D	0x00AC      	MOVWF      _sel_display
;R3_P3.c,22 :: 		}
0x001E	0x2844      	GOTO       L_interrupt2
L_interrupt1:
;R3_P3.c,25 :: 		if (sel_display == 3)
0x001F	0x082C      	MOVF       _sel_display, 0
0x0020	0x3A03      	XORLW      3
0x0021	0x1D03      	BTFSS      STATUS, 2
0x0022	0x282D      	GOTO       L_interrupt3
;R3_P3.c,27 :: 		PORTC = 0B11111011;  // Selec. display 2 (dezena)
0x0023	0x30FB      	MOVLW      251
0x0024	0x0087      	MOVWF      PORTC
;R3_P3.c,28 :: 		PORTB = const_7seg[cont_dz];
0x0025	0x0831      	MOVF       _cont_dz, 0
0x0026	0x3E22      	ADDLW      _const_7seg
0x0027	0x0084      	MOVWF      FSR
0x0028	0x0800      	MOVF       INDF, 0
0x0029	0x0086      	MOVWF      PORTB
;R3_P3.c,29 :: 		sel_display = 2;
0x002A	0x3002      	MOVLW      2
0x002B	0x00AC      	MOVWF      _sel_display
;R3_P3.c,30 :: 		}
0x002C	0x2844      	GOTO       L_interrupt4
L_interrupt3:
;R3_P3.c,33 :: 		if (sel_display == 2)
0x002D	0x082C      	MOVF       _sel_display, 0
0x002E	0x3A02      	XORLW      2
0x002F	0x1D03      	BTFSS      STATUS, 2
0x0030	0x283B      	GOTO       L_interrupt5
;R3_P3.c,35 :: 		PORTC = 0B11111101;  // Selec. display 3 (Centena)
0x0031	0x30FD      	MOVLW      253
0x0032	0x0087      	MOVWF      PORTC
;R3_P3.c,36 :: 		PORTB = const_7seg[cont_ct];
0x0033	0x0834      	MOVF       _cont_ct, 0
0x0034	0x3E22      	ADDLW      _const_7seg
0x0035	0x0084      	MOVWF      FSR
0x0036	0x0800      	MOVF       INDF, 0
0x0037	0x0086      	MOVWF      PORTB
;R3_P3.c,37 :: 		sel_display = 1;
0x0038	0x3001      	MOVLW      1
0x0039	0x00AC      	MOVWF      _sel_display
;R3_P3.c,38 :: 		}
0x003A	0x2844      	GOTO       L_interrupt6
L_interrupt5:
;R3_P3.c,41 :: 		PORTC = 0B11111110;  // Selec. display 4 (Milhar)
0x003B	0x30FE      	MOVLW      254
0x003C	0x0087      	MOVWF      PORTC
;R3_P3.c,42 :: 		PORTB = const_7seg[cont_ml];
0x003D	0x0833      	MOVF       _cont_ml, 0
0x003E	0x3E22      	ADDLW      _const_7seg
0x003F	0x0084      	MOVWF      FSR
0x0040	0x0800      	MOVF       INDF, 0
0x0041	0x0086      	MOVWF      PORTB
;R3_P3.c,43 :: 		sel_display = 4;
0x0042	0x3004      	MOVLW      4
0x0043	0x00AC      	MOVWF      _sel_display
;R3_P3.c,44 :: 		}
L_interrupt6:
;R3_P3.c,45 :: 		}
L_interrupt4:
;R3_P3.c,46 :: 		}
L_interrupt2:
;R3_P3.c,47 :: 		aux_tempo++;
0x0044	0x0AAF      	INCF       _aux_tempo, 1
0x0045	0x1903      	BTFSC      STATUS, 2
0x0046	0x0AB0      	INCF       _aux_tempo+1, 1
;R3_P3.c,48 :: 		aux_tempo2++;
0x0047	0x0AAD      	INCF       _aux_tempo2, 1
0x0048	0x1903      	BTFSC      STATUS, 2
0x0049	0x0AAE      	INCF       _aux_tempo2+1, 1
;R3_P3.c,50 :: 		if (aux_tempo == 250) //Passou 250ms??
0x004A	0x3000      	MOVLW      0
0x004B	0x0630      	XORWF      _aux_tempo+1, 0
0x004C	0x1D03      	BTFSS      STATUS, 2
0x004D	0x2850      	GOTO       L__interrupt30
0x004E	0x30FA      	MOVLW      250
0x004F	0x062F      	XORWF      _aux_tempo, 0
L__interrupt30:
0x0050	0x1D03      	BTFSS      STATUS, 2
0x0051	0x2855      	GOTO       L_interrupt7
;R3_P3.c,52 :: 		aux_tempo = 0;
0x0052	0x01AF      	CLRF       _aux_tempo
0x0053	0x01B0      	CLRF       _aux_tempo+1
;R3_P3.c,53 :: 		fim_250ms = 1;
0x0054	0x1437      	BSF        _fim_250ms, BitPos(_fim_250ms+0)
;R3_P3.c,54 :: 		}
L_interrupt7:
;R3_P3.c,55 :: 		if (aux_tempo2 == 125)
0x0055	0x3000      	MOVLW      0
0x0056	0x062E      	XORWF      _aux_tempo2+1, 0
0x0057	0x1D03      	BTFSS      STATUS, 2
0x0058	0x285B      	GOTO       L__interrupt31
0x0059	0x307D      	MOVLW      125
0x005A	0x062D      	XORWF      _aux_tempo2, 0
L__interrupt31:
0x005B	0x1D03      	BTFSS      STATUS, 2
0x005C	0x2860      	GOTO       L_interrupt8
;R3_P3.c,57 :: 		aux_tempo2 = 0;
0x005D	0x01AD      	CLRF       _aux_tempo2
0x005E	0x01AE      	CLRF       _aux_tempo2+1
;R3_P3.c,58 :: 		fim_1s = 1;
0x005F	0x1537      	BSF        _fim_1s, BitPos(_fim_1s+0)
;R3_P3.c,59 :: 		}
L_interrupt8:
;R3_P3.c,62 :: 		INTCON.TMR0IF = 0;  //Restaura o sinalizador de interrupção por T0
0x0060	0x110B      	BCF        INTCON, 2
;R3_P3.c,63 :: 		INTCON.TMR0IE = 1;  //Habilita novamente a interrupção
0x0061	0x168B      	BSF        INTCON, 5
;R3_P3.c,64 :: 		TMR0 = 131;                  //Inicia o contador do T0 com 131
0x0062	0x3083      	MOVLW      131
0x0063	0x0081      	MOVWF      TMR0
;R3_P3.c,65 :: 		}
L_interrupt0:
;R3_P3.c,66 :: 		}
L_end_interrupt:
L__interrupt29:
0x0064	0x0820      	MOVF       32, 0
0x0065	0x00F0      	MOVWF      R0
0x0066	0x0821      	MOVF       33, 0
0x0067	0x0084      	MOVWF      FSR
0x0068	0x0838      	MOVF       ___savePCLATH, 0
0x0069	0x008A      	MOVWF      PCLATH
0x006A	0x0E39      	SWAPF      ___saveSTATUS, 0
0x006B	0x0083      	MOVWF      STATUS
0x006C	0x0EFF      	SWAPF      R15, 1
0x006D	0x0E7F      	SWAPF      R15, 0
0x006E	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1303      	BCF        STATUS, 6
0x0071	0x0836      	MOVF       ___DoICPAddr+1, 0
0x0072	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0073	0x0835      	MOVF       ___DoICPAddr, 0
0x0074	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0075	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0076	0x206F      	CALL       _____DoICP
0x0077	0x118A      	BCF        PCLATH, 3
0x0078	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0079	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x007A	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x007B	0x0AB5      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x007C	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x007D	0x0AB6      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x007E	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x007F	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0080	0x2876      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0081	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0082	0x303F      	MOVLW      63
0x0083	0x1283      	BCF        STATUS, 5
0x0084	0x1303      	BCF        STATUS, 6
0x0085	0x00A2      	MOVWF      _const_7seg
0x0086	0x3006      	MOVLW      6
0x0087	0x00A3      	MOVWF      35
0x0088	0x305B      	MOVLW      91
0x0089	0x00A4      	MOVWF      36
0x008A	0x304F      	MOVLW      79
0x008B	0x00A5      	MOVWF      37
0x008C	0x3066      	MOVLW      102
0x008D	0x00A6      	MOVWF      38
0x008E	0x306D      	MOVLW      109
0x008F	0x00A7      	MOVWF      39
0x0090	0x307D      	MOVLW      125
0x0091	0x00A8      	MOVWF      40
0x0092	0x3007      	MOVLW      7
0x0093	0x00A9      	MOVWF      41
0x0094	0x307F      	MOVLW      127
0x0095	0x00AA      	MOVWF      42
0x0096	0x3067      	MOVLW      103
0x0097	0x00AB      	MOVWF      43
0x0098	0x3001      	MOVLW      1
0x0099	0x00AC      	MOVWF      _sel_display
0x009A	0x01AD      	CLRF       _aux_tempo2
0x009B	0x01AE      	CLRF       46
0x009C	0x01AF      	CLRF       _aux_tempo
0x009D	0x01B0      	CLRF       48
0x009E	0x01B1      	CLRF       _cont_dz
0x009F	0x01B2      	CLRF       _cont_un
0x00A0	0x01B3      	CLRF       _cont_ml
0x00A1	0x01B4      	CLRF       _cont_ct
;R3_P3.c,68 :: 		void main()
;R3_P3.c,70 :: 		ADCON1 = 0b00000110;
0x00A2	0x3006      	MOVLW      6
0x00A3	0x1683      	BSF        STATUS, 5
0x00A4	0x009F      	MOVWF      ADCON1
;R3_P3.c,71 :: 		TRISA = 0b11111101;
0x00A5	0x30FD      	MOVLW      253
0x00A6	0x0085      	MOVWF      TRISA
;R3_P3.c,72 :: 		TRISC = 0b00000000;  //Configura todo o PORTC como saída
0x00A7	0x0187      	CLRF       TRISC
;R3_P3.c,73 :: 		TRISB = 0b00000000;  //Configura todo o PORTB como saída
0x00A8	0x0186      	CLRF       TRISB
;R3_P3.c,75 :: 		OPTION_REG.T0CS = 0;  //BIT 5 Fonte de referência - CLK Interno
0x00A9	0x1281      	BCF        OPTION_REG, 5
;R3_P3.c,76 :: 		OPTION_REG.T0SE = 0;  //BIT 4 Transição do Timer0 Borda subida
0x00AA	0x1201      	BCF        OPTION_REG, 4
;R3_P3.c,77 :: 		OPTION_REG.PSA = 0;    //BIT 3 Seleciona o Prescaler parao T0
0x00AB	0x1181      	BCF        OPTION_REG, 3
;R3_P3.c,78 :: 		OPTION_REG.PS2 = 0;
0x00AC	0x1101      	BCF        OPTION_REG, 2
;R3_P3.c,79 :: 		OPTION_REG.PS1 = 1;
0x00AD	0x1481      	BSF        OPTION_REG, 1
;R3_P3.c,80 :: 		OPTION_REG.PS0 = 0;   //BIT 2-0 Taxa de divisão PESCALER 011 (1:8)
0x00AE	0x1001      	BCF        OPTION_REG, 0
;R3_P3.c,81 :: 		TMR0 = 131;                    //Inicia o contador do T0 com 131
0x00AF	0x3083      	MOVLW      131
0x00B0	0x1283      	BCF        STATUS, 5
0x00B1	0x0081      	MOVWF      TMR0
;R3_P3.c,83 :: 		INTCON = 0b00000000;  //Limpa o registro de controle de Interrupção
0x00B2	0x018B      	CLRF       INTCON
;R3_P3.c,84 :: 		INTCON.TMR0IE = 1;    //BIT 5 Habilita interrupção do T0 Overflow
0x00B3	0x168B      	BSF        INTCON, 5
;R3_P3.c,85 :: 		INTCON.TMR0IF = 0;    //BIT 2 Limpa o indicador de interrupção por TMR0
0x00B4	0x110B      	BCF        INTCON, 2
;R3_P3.c,86 :: 		INTCON.GIE = 1;            //BIT 7 Habilita interrupção Global
0x00B5	0x178B      	BSF        INTCON, 7
;R3_P3.c,88 :: 		PORTB = const_7seg[0]; //Inicializa com o display em zero
0x00B6	0x0822      	MOVF       _const_7seg, 0
0x00B7	0x0086      	MOVWF      PORTB
;R3_P3.c,89 :: 		PORTC = 0B11111110;   //Zera milhar
0x00B8	0x30FE      	MOVLW      254
0x00B9	0x0087      	MOVWF      PORTC
;R3_P3.c,90 :: 		PORTC = 0B11111101;   //Zera centena
0x00BA	0x30FD      	MOVLW      253
0x00BB	0x0087      	MOVWF      PORTC
;R3_P3.c,91 :: 		PORTC = 0B11111011;   //Zera dezena
0x00BC	0x30FB      	MOVLW      251
0x00BD	0x0087      	MOVWF      PORTC
;R3_P3.c,92 :: 		PORTC = 0B11110111;   //Zera unidade
0x00BE	0x30F7      	MOVLW      247
0x00BF	0x0087      	MOVWF      PORTC
;R3_P3.c,94 :: 		PORTA.RA1 = 0;
0x00C0	0x1085      	BCF        PORTA, 1
;R3_P3.c,95 :: 		fg_bt0 = 0;
0x00C1	0x10B7      	BCF        _fg_bt0, BitPos(_fg_bt0+0)
;R3_P3.c,98 :: 		for(;;) //Laço sem fim do programa principal
L_main9:
;R3_P3.c,100 :: 		if (fim_250ms)
0x00C2	0x1C37      	BTFSS      _fim_250ms, BitPos(_fim_250ms+0)
0x00C3	0x28ED      	GOTO       L_main12
;R3_P3.c,102 :: 		fim_250ms = 0;
0x00C4	0x1037      	BCF        _fim_250ms, BitPos(_fim_250ms+0)
;R3_P3.c,103 :: 		cont_un++;
0x00C5	0x0AB2      	INCF       _cont_un, 1
;R3_P3.c,104 :: 		if (cont_un > 9)
0x00C6	0x3080      	MOVLW      128
0x00C7	0x3A09      	XORLW      9
0x00C8	0x00F0      	MOVWF      R0
0x00C9	0x3080      	MOVLW      128
0x00CA	0x0632      	XORWF      _cont_un, 0
0x00CB	0x0270      	SUBWF      R0, 0
0x00CC	0x1803      	BTFSC      STATUS, 0
0x00CD	0x28ED      	GOTO       L_main13
;R3_P3.c,106 :: 		cont_un = 0;
0x00CE	0x01B2      	CLRF       _cont_un
;R3_P3.c,107 :: 		cont_dz++;
0x00CF	0x0AB1      	INCF       _cont_dz, 1
;R3_P3.c,108 :: 		if (cont_dz > 9)
0x00D0	0x3080      	MOVLW      128
0x00D1	0x3A09      	XORLW      9
0x00D2	0x00F0      	MOVWF      R0
0x00D3	0x3080      	MOVLW      128
0x00D4	0x0631      	XORWF      _cont_dz, 0
0x00D5	0x0270      	SUBWF      R0, 0
0x00D6	0x1803      	BTFSC      STATUS, 0
0x00D7	0x28ED      	GOTO       L_main14
;R3_P3.c,110 :: 		cont_dz = 0;
0x00D8	0x01B1      	CLRF       _cont_dz
;R3_P3.c,111 :: 		cont_ct++;
0x00D9	0x0AB4      	INCF       _cont_ct, 1
;R3_P3.c,112 :: 		if (cont_ct > 9)
0x00DA	0x3080      	MOVLW      128
0x00DB	0x3A09      	XORLW      9
0x00DC	0x00F0      	MOVWF      R0
0x00DD	0x3080      	MOVLW      128
0x00DE	0x0634      	XORWF      _cont_ct, 0
0x00DF	0x0270      	SUBWF      R0, 0
0x00E0	0x1803      	BTFSC      STATUS, 0
0x00E1	0x28ED      	GOTO       L_main15
;R3_P3.c,114 :: 		cont_ct = 0;
0x00E2	0x01B4      	CLRF       _cont_ct
;R3_P3.c,115 :: 		cont_ml++;
0x00E3	0x0AB3      	INCF       _cont_ml, 1
;R3_P3.c,116 :: 		if (cont_ml > 9) cont_ml = 0;
0x00E4	0x3080      	MOVLW      128
0x00E5	0x3A09      	XORLW      9
0x00E6	0x00F0      	MOVWF      R0
0x00E7	0x3080      	MOVLW      128
0x00E8	0x0633      	XORWF      _cont_ml, 0
0x00E9	0x0270      	SUBWF      R0, 0
0x00EA	0x1803      	BTFSC      STATUS, 0
0x00EB	0x28ED      	GOTO       L_main16
0x00EC	0x01B3      	CLRF       _cont_ml
L_main16:
;R3_P3.c,117 :: 		}
L_main15:
;R3_P3.c,118 :: 		}
L_main14:
;R3_P3.c,119 :: 		}
L_main13:
;R3_P3.c,120 :: 		}
L_main12:
;R3_P3.c,121 :: 		if((RA0_bit == 0) && (fg_bt0 == 0)){
0x00ED	0x1805      	BTFSC      RA0_bit, BitPos(RA0_bit+0)
0x00EE	0x28F6      	GOTO       L_main19
0x00EF	0x18B7      	BTFSC      _fg_bt0, BitPos(_fg_bt0+0)
0x00F0	0x28F6      	GOTO       L_main19
L__main27:
;R3_P3.c,122 :: 		cont_un = 0;
0x00F1	0x01B2      	CLRF       _cont_un
;R3_P3.c,123 :: 		cont_dz = 0;
0x00F2	0x01B1      	CLRF       _cont_dz
;R3_P3.c,124 :: 		cont_ct = 0;
0x00F3	0x01B4      	CLRF       _cont_ct
;R3_P3.c,125 :: 		cont_ml = 0;
0x00F4	0x01B3      	CLRF       _cont_ml
;R3_P3.c,126 :: 		fg_bt0 = 1;
0x00F5	0x14B7      	BSF        _fg_bt0, BitPos(_fg_bt0+0)
;R3_P3.c,127 :: 		}
L_main19:
;R3_P3.c,128 :: 		if((RA0_bit == 1) && (fg_bt0 == 1))fg_bt0 = 0;
0x00F6	0x1C05      	BTFSS      RA0_bit, BitPos(RA0_bit+0)
0x00F7	0x28FB      	GOTO       L_main22
0x00F8	0x1CB7      	BTFSS      _fg_bt0, BitPos(_fg_bt0+0)
0x00F9	0x28FB      	GOTO       L_main22
L__main26:
0x00FA	0x10B7      	BCF        _fg_bt0, BitPos(_fg_bt0+0)
L_main22:
;R3_P3.c,130 :: 		if (fim_1s){
0x00FB	0x1D37      	BTFSS      _fim_1s, BitPos(_fim_1s+0)
0x00FC	0x2903      	GOTO       L_main23
;R3_P3.c,131 :: 		fim_1s = 0;
0x00FD	0x1137      	BCF        _fim_1s, BitPos(_fim_1s+0)
;R3_P3.c,132 :: 		if (PORTA.RA1  == 1) PORTA.RA1  = 0;
0x00FE	0x1C85      	BTFSS      PORTA, 1
0x00FF	0x2902      	GOTO       L_main24
0x0100	0x1085      	BCF        PORTA, 1
0x0101	0x2903      	GOTO       L_main25
L_main24:
;R3_P3.c,133 :: 		else PORTA.RA1  = 1;
0x0102	0x1485      	BSF        PORTA, 1
L_main25:
;R3_P3.c,134 :: 		}
L_main23:
;R3_P3.c,138 :: 		}
0x0103	0x28C2      	GOTO       L_main9
;R3_P3.c,139 :: 		}
L_end_main:
0x0104	0x2904      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [107]    _interrupt
0x006F       [7]    _____DoICP
0x0076      [12]    ___CC2DW
0x0082     [131]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    RA0_bit
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0022      [10]    _const_7seg
0x002C       [1]    _sel_display
0x002D       [2]    _aux_tempo2
0x002F       [2]    _aux_tempo
0x0031       [1]    _cont_dz
0x0032       [1]    _cont_un
0x0033       [1]    _cont_ml
0x0034       [1]    _cont_ct
0x0035       [2]    ___DoICPAddr
0x0037       [0]    _fg_bt0
0x0037       [0]    _fim_1s
0x0037       [0]    _fim_250ms
0x0038       [1]    ___savePCLATH
0x0039       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x009F       [1]    ADCON1
