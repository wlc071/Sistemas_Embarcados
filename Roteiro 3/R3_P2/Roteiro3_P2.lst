;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09/11/2022 11:29:01
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2866      	GOTO       102
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B3      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0804      	MOVF       FSR, 0
0x000C	0x00A0      	MOVWF      32
;Roteiro3_P2.c,6 :: 		void interrupt()
;Roteiro3_P2.c,8 :: 		if (INTCON.TMR0IF == 1)
0x000D	0x1D0B      	BTFSS      INTCON, 2
0x000E	0x284A      	GOTO       L_interrupt0
;Roteiro3_P2.c,10 :: 		aux_tempo++;
0x000F	0x0AA5      	INCF       _aux_tempo, 1
0x0010	0x1903      	BTFSC      STATUS, 2
0x0011	0x0AA6      	INCF       _aux_tempo+1, 1
;Roteiro3_P2.c,11 :: 		if (aux_tempo == 125)
0x0012	0x3000      	MOVLW      0
0x0013	0x0626      	XORWF      _aux_tempo+1, 0
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2818      	GOTO       L__interrupt9
0x0016	0x307D      	MOVLW      125
0x0017	0x0625      	XORWF      _aux_tempo, 0
L__interrupt9:
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x2846      	GOTO       L_interrupt1
;Roteiro3_P2.c,13 :: 		aux_tempo = 0;
0x001A	0x01A5      	CLRF       _aux_tempo
0x001B	0x01A6      	CLRF       _aux_tempo+1
;Roteiro3_P2.c,14 :: 		contagem1++;
0x001C	0x0AA1      	INCF       _contagem1, 1
0x001D	0x1903      	BTFSC      STATUS, 2
0x001E	0x0AA2      	INCF       _contagem1+1, 1
;Roteiro3_P2.c,15 :: 		if (contagem1 > 9) {
0x001F	0x3080      	MOVLW      128
0x0020	0x00F0      	MOVWF      R0
0x0021	0x3080      	MOVLW      128
0x0022	0x0622      	XORWF      _contagem1+1, 0
0x0023	0x0270      	SUBWF      R0, 0
0x0024	0x1D03      	BTFSS      STATUS, 2
0x0025	0x2828      	GOTO       L__interrupt10
0x0026	0x0821      	MOVF       _contagem1, 0
0x0027	0x3C09      	SUBLW      9
L__interrupt10:
0x0028	0x1803      	BTFSC      STATUS, 0
0x0029	0x283C      	GOTO       L_interrupt2
;Roteiro3_P2.c,16 :: 		contagem1 = 0;
0x002A	0x01A1      	CLRF       _contagem1
0x002B	0x01A2      	CLRF       _contagem1+1
;Roteiro3_P2.c,17 :: 		contagem2++;
0x002C	0x0AA3      	INCF       _contagem2, 1
0x002D	0x1903      	BTFSC      STATUS, 2
0x002E	0x0AA4      	INCF       _contagem2+1, 1
;Roteiro3_P2.c,18 :: 		if (contagem2 > 9) contagem2 = 0;
0x002F	0x3080      	MOVLW      128
0x0030	0x00F0      	MOVWF      R0
0x0031	0x3080      	MOVLW      128
0x0032	0x0624      	XORWF      _contagem2+1, 0
0x0033	0x0270      	SUBWF      R0, 0
0x0034	0x1D03      	BTFSS      STATUS, 2
0x0035	0x2838      	GOTO       L__interrupt11
0x0036	0x0823      	MOVF       _contagem2, 0
0x0037	0x3C09      	SUBLW      9
L__interrupt11:
0x0038	0x1803      	BTFSC      STATUS, 0
0x0039	0x283C      	GOTO       L_interrupt3
0x003A	0x01A3      	CLRF       _contagem2
0x003B	0x01A4      	CLRF       _contagem2+1
L_interrupt3:
;Roteiro3_P2.c,19 :: 		};
L_interrupt2:
;Roteiro3_P2.c,20 :: 		PORTD = const_7seg[contagem1];
0x003C	0x0821      	MOVF       _contagem1, 0
0x003D	0x3E27      	ADDLW      _const_7seg
0x003E	0x0084      	MOVWF      FSR
0x003F	0x0800      	MOVF       INDF, 0
0x0040	0x0088      	MOVWF      PORTD
;Roteiro3_P2.c,21 :: 		PORTC = const_7seg[contagem2];
0x0041	0x0823      	MOVF       _contagem2, 0
0x0042	0x3E27      	ADDLW      _const_7seg
0x0043	0x0084      	MOVWF      FSR
0x0044	0x0800      	MOVF       INDF, 0
0x0045	0x0087      	MOVWF      PORTC
;Roteiro3_P2.c,22 :: 		}
L_interrupt1:
;Roteiro3_P2.c,23 :: 		INTCON.TMR0IF = 0;   //Restaura o sinalizador de interrupção por T0
0x0046	0x110B      	BCF        INTCON, 2
;Roteiro3_P2.c,24 :: 		INTCON.TMR0IE = 1;   //Habilita novamente a interrupção
0x0047	0x168B      	BSF        INTCON, 5
;Roteiro3_P2.c,25 :: 		TMR0 = 131;                   //Inicia o contador do T0 com 131
0x0048	0x3083      	MOVLW      131
0x0049	0x0081      	MOVWF      TMR0
;Roteiro3_P2.c,26 :: 		}
L_interrupt0:
;Roteiro3_P2.c,27 :: 		}
L_end_interrupt:
L__interrupt8:
0x004A	0x0820      	MOVF       32, 0
0x004B	0x0084      	MOVWF      FSR
0x004C	0x0833      	MOVF       ___savePCLATH, 0
0x004D	0x008A      	MOVWF      PCLATH
0x004E	0x0E34      	SWAPF      ___saveSTATUS, 0
0x004F	0x0083      	MOVWF      STATUS
0x0050	0x0EFF      	SWAPF      R15, 1
0x0051	0x0E7F      	SWAPF      R15, 0
0x0052	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0053	0x1283      	BCF        STATUS, 5
0x0054	0x1303      	BCF        STATUS, 6
0x0055	0x0832      	MOVF       ___DoICPAddr+1, 0
0x0056	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0057	0x0831      	MOVF       ___DoICPAddr, 0
0x0058	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0059	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x005A	0x2053      	CALL       _____DoICP
0x005B	0x118A      	BCF        PCLATH, 3
0x005C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x005D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x005E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x005F	0x0AB1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0060	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0061	0x0AB2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0062	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0063	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0064	0x285A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0065	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0066	0x1283      	BCF        STATUS, 5
0x0067	0x1303      	BCF        STATUS, 6
0x0068	0x01A1      	CLRF       _contagem1
0x0069	0x01A2      	CLRF       34
0x006A	0x01A3      	CLRF       _contagem2
0x006B	0x01A4      	CLRF       36
0x006C	0x01A5      	CLRF       _aux_tempo
0x006D	0x01A6      	CLRF       38
0x006E	0x303F      	MOVLW      63
0x006F	0x00A7      	MOVWF      _const_7seg
0x0070	0x3006      	MOVLW      6
0x0071	0x00A8      	MOVWF      40
0x0072	0x305B      	MOVLW      91
0x0073	0x00A9      	MOVWF      41
0x0074	0x304F      	MOVLW      79
0x0075	0x00AA      	MOVWF      42
0x0076	0x3066      	MOVLW      102
0x0077	0x00AB      	MOVWF      43
0x0078	0x306D      	MOVLW      109
0x0079	0x00AC      	MOVWF      44
0x007A	0x307D      	MOVLW      125
0x007B	0x00AD      	MOVWF      45
0x007C	0x3007      	MOVLW      7
0x007D	0x00AE      	MOVWF      46
0x007E	0x307F      	MOVLW      127
0x007F	0x00AF      	MOVWF      47
0x0080	0x3067      	MOVLW      103
0x0081	0x00B0      	MOVWF      48
;Roteiro3_P2.c,29 :: 		void main()
;Roteiro3_P2.c,31 :: 		TRISA = 0b11111111;      //Configura todo o PORTA como entrada
0x0082	0x30FF      	MOVLW      255
0x0083	0x1683      	BSF        STATUS, 5
0x0084	0x0085      	MOVWF      TRISA
;Roteiro3_P2.c,32 :: 		TRISD = 0b00000000;      //Configura todo o PORTD como saída
0x0085	0x0188      	CLRF       TRISD
;Roteiro3_P2.c,33 :: 		TRISC = 0b00000000;
0x0086	0x0187      	CLRF       TRISC
;Roteiro3_P2.c,35 :: 		OPTION_REG.T0CS = 0;  //BIT 5 Fonte de referência - CLK Interno
0x0087	0x1281      	BCF        OPTION_REG, 5
;Roteiro3_P2.c,36 :: 		OPTION_REG.T0SE = 0;  //BIT 4 Transição do Timer0 Borda subida
0x0088	0x1201      	BCF        OPTION_REG, 4
;Roteiro3_P2.c,37 :: 		OPTION_REG.PSA = 0;   //BIT 3 Seleciona o Prescaler parao T0
0x0089	0x1181      	BCF        OPTION_REG, 3
;Roteiro3_P2.c,38 :: 		OPTION_REG.PS2 = 0;
0x008A	0x1101      	BCF        OPTION_REG, 2
;Roteiro3_P2.c,39 :: 		OPTION_REG.PS1 = 1;
0x008B	0x1481      	BSF        OPTION_REG, 1
;Roteiro3_P2.c,40 :: 		OPTION_REG.PS0 = 1;   //BIT 2-0 Taxa de divisão PESCALER 011 (1:16)
0x008C	0x1401      	BSF        OPTION_REG, 0
;Roteiro3_P2.c,41 :: 		TMR0 = 131;                    //Inicia o contador do T0 com 131
0x008D	0x3083      	MOVLW      131
0x008E	0x1283      	BCF        STATUS, 5
0x008F	0x0081      	MOVWF      TMR0
;Roteiro3_P2.c,43 :: 		INTCON = 0b00000000;   //Limpa o registro de controle de Interrupção
0x0090	0x018B      	CLRF       INTCON
;Roteiro3_P2.c,44 :: 		INTCON.TMR0IE = 1;     //BIT 5 Habilita interrupção do T0 Overflow
0x0091	0x168B      	BSF        INTCON, 5
;Roteiro3_P2.c,45 :: 		INTCON.TMR0IF = 0;     //BIT 2 Limpa o indicador de interrupção do T0
0x0092	0x110B      	BCF        INTCON, 2
;Roteiro3_P2.c,46 :: 		INTCON.GIE = 1;             //BIT 7 Habilita interrupção Global
0x0093	0x178B      	BSF        INTCON, 7
;Roteiro3_P2.c,48 :: 		PORTD = const_7seg[contagem1];  //Inicializa com o display em zero
0x0094	0x0821      	MOVF       _contagem1, 0
0x0095	0x3E27      	ADDLW      _const_7seg
0x0096	0x0084      	MOVWF      FSR
0x0097	0x0800      	MOVF       INDF, 0
0x0098	0x0088      	MOVWF      PORTD
;Roteiro3_P2.c,49 :: 		PORTC = const_7seg[contagem2];
0x0099	0x0823      	MOVF       _contagem2, 0
0x009A	0x3E27      	ADDLW      _const_7seg
0x009B	0x0084      	MOVWF      FSR
0x009C	0x0800      	MOVF       INDF, 0
0x009D	0x0087      	MOVWF      PORTC
;Roteiro3_P2.c,51 :: 		for(;;)  //Laço sem fim do programa principal
L_main4:
;Roteiro3_P2.c,53 :: 		}
0x009E	0x289E      	GOTO       L_main4
;Roteiro3_P2.c,54 :: 		}
L_end_main:
0x009F	0x289F      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [79]    _interrupt
0x0053       [7]    _____DoICP
0x005A      [12]    ___CC2DW
0x0066      [58]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0021       [2]    _contagem1
0x0023       [2]    _contagem2
0x0025       [2]    _aux_tempo
0x0027      [10]    _const_7seg
0x0031       [2]    ___DoICPAddr
0x0033       [1]    ___savePCLATH
0x0034       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0087       [1]    TRISC
0x0088       [1]    TRISD
